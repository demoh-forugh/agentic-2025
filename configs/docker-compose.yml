services:
  # Ollama - Local LLM Runtime
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped
    networks:
      - ai-network
    healthcheck:
      test: ["CMD-SHELL", "ollama list || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # OpenWebUI - Beautiful Chat Interface
  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    ports:
      - "3000:8080"
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - WEBUI_AUTH=true
    volumes:
      - open_webui_data:/app/backend/data
    depends_on:
      - ollama
    restart: unless-stopped
    networks:
      - ai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # n8n - Workflow Automation & Agent Orchestration
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    ports:
      - "5678:5678"
    environment:
      - N8N_HOST=${N8N_HOST:-localhost}
      - N8N_PORT=5678
      - N8N_PROTOCOL=${N8N_PROTOCOL:-http}
      - N8N_SECURE_COOKIE=${N8N_SECURE_COOKIE:-false}
      - NODE_ENV=production
      - WEBHOOK_URL=${WEBHOOK_URL:-http://localhost:5678/}
      - GENERIC_TIMEZONE=${TIMEZONE:-America/New_York}
      # Ollama connection
      - OLLAMA_HOST=http://ollama:11434
      # Pre-configure Ollama and PostgreSQL credentials for users (no manual setup needed!)
      - CREDENTIALS_OVERWRITE_DATA_FILE=/data/credentials-overwrite.json
      # Optional: Google OAuth (set in .env)
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID:-}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET:-}
    volumes:
      - n8n_data:/home/node/.n8n
      - ./workflows:/workflows:ro
      - ./configs/n8n-credentials-overwrite.json:/data/credentials-overwrite.json:ro
    depends_on:
      - ollama
    restart: unless-stopped
    networks:
      - ai-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # PostgreSQL - Open Source Database for n8n and Business Data
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      - POSTGRES_USER=workshop
      - POSTGRES_PASSWORD=workshop_password
      - POSTGRES_DB=workshop_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./examples/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - ai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U workshop -d workshop_db"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  ollama_data:
    driver: local
  open_webui_data:
    driver: local
  n8n_data:
    driver: local
  postgres_data:
    driver: local

networks:
  ai-network:
    driver: bridge
