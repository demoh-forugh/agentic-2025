{
  "name": "04 - AI Document Generator",
  "nodes": [
    {
      "parameters": {},
      "id": "manual-trigger-001",
      "name": "Manual Trigger",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [250, 300]
    },
    {
      "parameters": {
        "operation": "getAll",
        "returnAll": false,
        "limit": 10,
        "filters": {
          "name": "Workshop Data"
        }
      },
      "id": "sheets-get-data-001",
      "name": "Get Data from Sheet",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 3,
      "position": [450, 300],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "1",
          "name": "Google Workshop Account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Aggregate and format sheet data for AI processing\nconst items = $input.all();\n\nconst summary = {\n  total_rows: items.length,\n  columns: Object.keys(items[0].json),\n  data: items.map(item => item.json),\n  statistics: {\n    // Add basic stats if numeric columns exist\n  }\n};\n\nreturn [{ json: summary }];"
      },
      "id": "code-aggregate-001",
      "name": "Aggregate Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [650, 300]
    },
    {
      "parameters": {
        "prompt": "=You are a professional report writer. Create a comprehensive business report based on the following data:\n\n{{ JSON.stringify($json, null, 2) }}\n\nGenerate a well-structured report with:\n1. Executive Summary\n2. Key Findings\n3. Data Analysis\n4. Trends and Patterns\n5. Recommendations\n6. Conclusion\n\nFormat the output in Markdown for easy conversion to Google Docs.",
        "options": {
          "temperature": 0.5
        }
      },
      "id": "ollama-generate-report-001",
      "name": "Generate Report with AI",
      "type": "n8n-nodes-base.ollama",
      "typeVersion": 1,
      "position": [850, 300],
      "credentials": {
        "ollamaApi": {
          "id": "1",
          "name": "Ollama Local"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Convert Markdown to Google Docs format\nconst markdown = $json.text;\n\n// Simple markdown to structured text conversion\nconst lines = markdown.split('\\n');\nconst requests = [];\n\nlet currentIndex = 1;\n\nlines.forEach(line => {\n  if (line.startsWith('# ')) {\n    // Heading 1\n    const text = line.replace('# ', '');\n    requests.push({\n      insertText: {\n        location: { index: currentIndex },\n        text: text + '\\n'\n      }\n    });\n    requests.push({\n      updateParagraphStyle: {\n        range: {\n          startIndex: currentIndex,\n          endIndex: currentIndex + text.length\n        },\n        paragraphStyle: {\n          namedStyleType: 'HEADING_1'\n        },\n        fields: 'namedStyleType'\n      }\n    });\n    currentIndex += text.length + 1;\n  } else if (line.startsWith('## ')) {\n    // Heading 2\n    const text = line.replace('## ', '');\n    requests.push({\n      insertText: {\n        location: { index: currentIndex },\n        text: text + '\\n'\n      }\n    });\n    requests.push({\n      updateParagraphStyle: {\n        range: {\n          startIndex: currentIndex,\n          endIndex: currentIndex + text.length\n        },\n        paragraphStyle: {\n          namedStyleType: 'HEADING_2'\n        },\n        fields: 'namedStyleType'\n      }\n    });\n    currentIndex += text.length + 1;\n  } else if (line.trim()) {\n    // Regular text\n    requests.push({\n      insertText: {\n        location: { index: currentIndex },\n        text: line + '\\n'\n      }\n    });\n    currentIndex += line.length + 1;\n  }\n});\n\nreturn [{\n  json: {\n    title: 'AI Generated Report - ' + new Date().toLocaleDateString(),\n    content: markdown,\n    formattedContent: requests\n  }\n}];"
      },
      "id": "code-format-doc-001",
      "name": "Format for Google Docs",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1050, 300]
    },
    {
      "parameters": {
        "operation": "create",
        "title": "={{ $json.title }}",
        "options": {}
      },
      "id": "docs-create-001",
      "name": "Create Google Doc",
      "type": "n8n-nodes-base.googleDocs",
      "typeVersion": 1,
      "position": [1250, 300],
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "1",
          "name": "Google Workshop Account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": "={{ $json.documentId }}",
        "actionsUi": {
          "actionFields": [
            {
              "action": "insertText",
              "text": "={{ $('Format for Google Docs').item.json.content }}",
              "location": "body"
            }
          ]
        }
      },
      "id": "docs-update-content-001",
      "name": "Insert Content",
      "type": "n8n-nodes-base.googleDocs",
      "typeVersion": 1,
      "position": [1450, 300],
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "1",
          "name": "Google Workshop Account"
        }
      }
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "document_title",
              "value": "={{ $('Format for Google Docs').item.json.title }}"
            },
            {
              "name": "document_id",
              "value": "={{ $json.documentId }}"
            },
            {
              "name": "document_url",
              "value": "=https://docs.google.com/document/d/{{ $json.documentId }}/edit"
            },
            {
              "name": "created_at",
              "value": "={{ $now.toISO() }}"
            },
            {
              "name": "data_source",
              "value": "Google Sheets"
            }
          ]
        },
        "options": {}
      },
      "id": "format-output-001",
      "name": "Format Output",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [1650, 300]
    },
    {
      "parameters": {
        "operation": "send",
        "message": "=‚úÖ Report Generated Successfully!\n\nüìÑ Title: {{ $json.document_title }}\nüîó URL: {{ $json.document_url }}\n‚è∞ Created: {{ $json.created_at }}\n\nYour AI-generated report is ready for review.",
        "additionalFields": {}
      },
      "id": "notification-001",
      "name": "Send Notification (Optional)",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 1,
      "position": [1850, 300],
      "disabled": true,
      "notes": "Enable this node and configure Slack credentials if you want notifications"
    }
  ],
  "connections": {
    "Manual Trigger": {
      "main": [
        [
          {
            "node": "Get Data from Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Data from Sheet": {
      "main": [
        [
          {
            "node": "Aggregate Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate Data": {
      "main": [
        [
          {
            "node": "Generate Report with AI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Report with AI": {
      "main": [
        [
          {
            "node": "Format for Google Docs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format for Google Docs": {
      "main": [
        [
          {
            "node": "Create Google Doc",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Google Doc": {
      "main": [
        [
          {
            "node": "Insert Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert Content": {
      "main": [
        [
          {
            "node": "Format Output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Output": {
      "main": [
        [
          {
            "node": "Send Notification (Optional)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1",
  "id": "4",
  "meta": {
    "instanceId": "workshop-demo"
  },
  "tags": [
    {
      "name": "workshop",
      "id": "1"
    },
    {
      "name": "documents",
      "id": "6"
    },
    {
      "name": "agent",
      "id": "4"
    }
  ]
}
